pipeline {
  agent {label 'dockerslave'}
   stages {
      stage('Clone Sources') {
        steps {
          checkout scm
        } 
      }
      stage('check if image exist and install if not') {
         steps {
            echo 'check if image exist and install if not'  
		 sh''' if [ $(docker images | grep alpcon | wc -l) -eq 0 ];then
                	docker build -t alpcon:1.0 ${WORKSPACE}
                fi
		  '''
         }
	}
	stage('run the file') {
         steps {
            echo 'running file'  
		 sh''' if [ $(docker ps | grep alpcon | wc -l) -eq 0 ];then
		 	if [ $(docker ps -a | grep alpcon | wc -l) -eq 0 ];then
                		docker run -v ${WORKSPACE}:/home/app/ --name alpcon alpcon:1.0 
			fi
			docker start alpcon
                fi
		  '''
         }
	}
	stage('stop the docker and put logs') {
         steps {
            echo 'stop the docker and put logs'  
		 sh''' 
		sleep 10
		 if [ $(docker ps | grep alpcon | wc -l) -eq 1 ];then
		 	docker kill alpcon
		fi
		if[ $(docker ps -a | grep alpcon| grep "Exited (0)"  | wc -l) -eq 0 ];then
                	echo "failed to run script error" $(docker ps -a | grep alpcon ) >> logfile
		else 
			echo "succeeded "  $(docker ps -a | grep alpcon ) >> logfile
		fi
		  '''
         }
	}
   }
}
